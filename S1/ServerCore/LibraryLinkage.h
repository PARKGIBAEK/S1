// Tools\LibraryLinkageCodeGenerator에 자동 생성 툴을 이용하여 만들 것
#pragma once
#define _WIN32_WINNT 0x0601

// openssl 링크 에러 해결을 위해 추가했으나 Configuration Property에 직접 추가 함
// #pragma comment(lib, "Crypt32.lib")
// #pragma comment(lib, "ws2_32.lib")

// Debug 모드 (64비트)
#if defined(_DEBUG) && (defined(_WIN64) || defined(__x86_64__) || defined(__ppc64__))
#pragma comment(lib, "absl\\x64\\Debug\\absl_bad_any_cast_impl.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_bad_optional_access.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_bad_variant_access.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_base.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_city.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_civil_time.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_cord.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_cordz_functions.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_cordz_handle.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_cordz_info.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_cordz_sample_token.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_cord_internal.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_crc32c.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_crc_cord_state.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_crc_cpu_detect.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_crc_internal.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_debugging_internal.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_decode_rust_punycode.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_demangle_internal.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_demangle_rust.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_die_if_null.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_examine_stack.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_exponential_biased.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_failure_signal_handler.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_flags_commandlineflag.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_flags_commandlineflag_internal.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_flags_config.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_flags_internal.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_flags_marshalling.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_flags_parse.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_flags_private_handle_accessor.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_flags_program_name.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_flags_reflection.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_flags_usage.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_flags_usage_internal.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_graphcycles_internal.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_hash.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_hashtablez_sampler.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_int128.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_kernel_timeout_internal.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_leak_check.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_log_entry.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_log_flags.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_log_globals.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_log_initialize.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_log_internal_check_op.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_log_internal_conditions.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_log_internal_fnmatch.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_log_internal_format.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_log_internal_globals.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_log_internal_log_sink_set.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_log_internal_message.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_log_internal_nullguard.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_log_internal_proto.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_log_severity.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_log_sink.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_low_level_hash.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_malloc_internal.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_periodic_sampler.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_poison.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_random_distributions.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_random_internal_distribution_test_util.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_random_internal_platform.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_random_internal_pool_urbg.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_random_internal_randen.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_random_internal_randen_hwaes.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_random_internal_randen_hwaes_impl.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_random_internal_randen_slow.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_random_internal_seed_material.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_random_seed_gen_exception.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_random_seed_sequences.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_raw_hash_set.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_raw_logging_internal.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_scoped_set_env.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_spinlock_wait.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_stacktrace.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_status.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_statusor.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_strerror.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_strings.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_strings_internal.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_string_view.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_str_format_internal.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_symbolize.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_synchronization.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_throw_delegate.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_time.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_time_zone.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_utf8_for_code_point.lib")
#pragma comment(lib, "absl\\x64\\Debug\\absl_vlog_config_internal.lib")
#pragma comment(lib, "boost\\x64\\Debug\\boost_atomic-vc144-mt-gd-x64-1_85.lib")
#pragma comment(lib, "boost\\x64\\Debug\\boost_charconv-vc144-mt-gd-x64-1_85.lib")
#pragma comment(lib, "boost\\x64\\Debug\\boost_container-vc144-mt-gd-x64-1_85.lib")
#pragma comment(lib, "boost\\x64\\Debug\\boost_context-vc144-mt-gd-x64-1_85.lib")
#pragma comment(lib, "boost\\x64\\Debug\\boost_coroutine-vc144-mt-gd-x64-1_85.lib")
#pragma comment(lib, "boost\\x64\\Debug\\boost_date_time-vc144-mt-gd-x64-1_85.lib")
#pragma comment(lib, "boost\\x64\\Debug\\boost_exception-vc144-mt-gd-x64-1_85.lib")
#pragma comment(lib, "boost\\x64\\Debug\\boost_regex-vc144-mt-gd-x64-1_85.lib")
#pragma comment(lib, "boost\\x64\\Debug\\boost_system-vc144-mt-gd-x64-1_85.lib")
#pragma comment(lib, "openssl\\x64\\Debug\\libcrypto.lib")
#pragma comment(lib, "openssl\\x64\\Debug\\libssl.lib")
#pragma comment(lib, "protobuf\\x64\\Debug\\libprotobuf-lited.lib")
#pragma comment(lib, "protobuf\\x64\\Debug\\libprotobufd.lib")
#pragma comment(lib, "protobuf\\x64\\Debug\\libprotocd.lib")
#pragma comment(lib, "ServerCore\\x64\\Debug\\ServerCore.lib")
#pragma comment(lib, "utf8_range\\x64\\Debug\\utf8_range.lib")
#pragma comment(lib, "utf8_range\\x64\\Debug\\utf8_validity.lib")
// Release 모드 (64비트)
#elif defined(NDEBUG) && (defined(_WIN64) || defined(__x86_64__) || defined(__ppc64__))
#pragma comment(lib, "absl\\x64\\Release\\absl_bad_any_cast_impl.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_bad_optional_access.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_bad_variant_access.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_base.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_city.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_civil_time.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_cord.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_cordz_functions.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_cordz_handle.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_cordz_info.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_cordz_sample_token.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_cord_internal.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_crc32c.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_crc_cord_state.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_crc_cpu_detect.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_crc_internal.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_debugging_internal.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_decode_rust_punycode.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_demangle_internal.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_demangle_rust.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_die_if_null.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_examine_stack.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_exponential_biased.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_failure_signal_handler.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_flags_commandlineflag.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_flags_commandlineflag_internal.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_flags_config.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_flags_internal.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_flags_marshalling.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_flags_parse.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_flags_private_handle_accessor.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_flags_program_name.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_flags_reflection.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_flags_usage.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_flags_usage_internal.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_graphcycles_internal.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_hash.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_hashtablez_sampler.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_int128.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_kernel_timeout_internal.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_leak_check.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_log_entry.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_log_flags.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_log_globals.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_log_initialize.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_log_internal_check_op.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_log_internal_conditions.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_log_internal_fnmatch.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_log_internal_format.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_log_internal_globals.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_log_internal_log_sink_set.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_log_internal_message.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_log_internal_nullguard.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_log_internal_proto.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_log_severity.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_log_sink.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_low_level_hash.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_malloc_internal.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_periodic_sampler.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_poison.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_random_distributions.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_random_internal_distribution_test_util.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_random_internal_platform.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_random_internal_pool_urbg.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_random_internal_randen.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_random_internal_randen_hwaes.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_random_internal_randen_hwaes_impl.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_random_internal_randen_slow.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_random_internal_seed_material.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_random_seed_gen_exception.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_random_seed_sequences.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_raw_hash_set.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_raw_logging_internal.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_scoped_set_env.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_spinlock_wait.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_stacktrace.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_status.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_statusor.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_strerror.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_strings.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_strings_internal.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_string_view.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_str_format_internal.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_symbolize.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_synchronization.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_throw_delegate.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_time.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_time_zone.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_utf8_for_code_point.lib")
#pragma comment(lib, "absl\\x64\\Release\\absl_vlog_config_internal.lib")
#pragma comment(lib, "boost\\x64\\Release\\boost_atomic-vc144-mt-x64-1_85.lib")
#pragma comment(lib, "boost\\x64\\Release\\boost_charconv-vc144-mt-x64-1_85.lib")
#pragma comment(lib, "boost\\x64\\Release\\boost_container-vc144-mt-x64-1_85.lib")
#pragma comment(lib, "boost\\x64\\Release\\boost_context-vc144-mt-x64-1_85.lib")
#pragma comment(lib, "boost\\x64\\Release\\boost_coroutine-vc144-mt-x64-1_85.lib")
#pragma comment(lib, "boost\\x64\\Release\\boost_date_time-vc144-mt-x64-1_85.lib")
#pragma comment(lib, "boost\\x64\\Release\\boost_exception-vc144-mt-x64-1_85.lib")
#pragma comment(lib, "boost\\x64\\Release\\boost_regex-vc144-mt-x64-1_85.lib")
#pragma comment(lib, "boost\\x64\\Release\\boost_system-vc144-mt-x64-1_85.lib")
#pragma comment(lib, "openssl\\x64\\Release\\libcrypto.lib")
#pragma comment(lib, "openssl\\x64\\Release\\libssl.lib")
#pragma comment(lib, "protobuf\\x64\\Release\\libprotobuf-lite.lib")
#pragma comment(lib, "protobuf\\x64\\Release\\libprotobuf.lib")
#pragma comment(lib, "protobuf\\x64\\Release\\libprotoc.lib")
#pragma comment(lib, "utf8_range\\x64\\Release\\utf8_range.lib")
#pragma comment(lib, "utf8_range\\x64\\Release\\utf8_validity.lib")
#endif

